name: CI/CD intergration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Build Backend
      run: yarn build

    - name: Build Docker Image
      run: docker build -t my-backstage-app . --file my-backstage-app/Dockerfile


    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_REGION }}

    # - name: Build Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    
    # - name: Log in to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Push Docker image to Amazon ECR
    #   run: |
    #     #docker push ${{ steps.login-ecr.outputs.registry }}/my-image-name:$(date +%s)

    # - name: Deploy to AWS ECS
    #   run: |
    #     #aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment

